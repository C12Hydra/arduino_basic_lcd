#include <Servo.h>
#include <LiquidCrystal.h>
LiquidCrystal lcd = LiquidCrystal(A1, A2, 2, 3, 4, 5);
Servo servomotor;
int pos_servo;
int u = 6;
int d = 12;
int t = 11;
int q = 10;
int c = 9;
int s = 8;
int se = 7;
int g;
int b_esq = 13;
int b_dir = A0;
int i;
int k;
int flag;
int flag2;
int flag3;
int flag4;
int flag5;
int idle;
int x[5] = {0, 0, 0, 0, 0};
int y[5] = {0, 0, 0, 0, 0};
byte customChar1[8] = {
  0b00011,
  0b00001,
  0b11111,
  0b01110,
  0b10001,
  0b10101,
  0b10001,
  0b01110
};//olho1
byte customChar3[8] = {
  0b00000,
  0b00000,
  0b01110,
  0b11111,
  0b11111,
  0b11111,
  0b01110,
  0b00000
};//selecao sim
byte customChar4[8] = {
  0b00001,
  0b00001,
  0b00001,
  0b00010,
  0b01100,
  0b00000,
  0b00000,
  0b00000
};//bra√ßo mesa
byte customChar5[8] = {
  0b00111,
  0b00101,
  0b00111,
  0b00000,
  0b00000,
  0b00000,
  0b00000,
  0b00000
};//olho mesa
byte customChar6[8] = {
  0b00000,
  0b00000,
  0b00000,
  0b01111,
  0b01001,
  0b01001,
  0b01111,
  0b00000
};//boca mesa
byte customChar7[8] = {
  0b00000,
  0b00000,
  0b00000,
  0b00000,
  0b00000,
  0b00000,
  0b01110,
  0b10001
};//vento mesa
byte customChar8[8] = {
  0b00000,
  0b00000,
  0b00010,
  0b00010,
  0b00010,
  0b11111,
  0b00000,
  0b00000
};//mesa1
byte customChar9[8] = {
  0b00000,
  0b00000,
  0b00000,
  0b00000,
  0b00000,
  0b11111,
  0b00000,
  0b00000
};//mesa 2
byte customChar10[8] = {
  0b00000,
  0b00000,
  0b01000,
  0b01000,
  0b01000,
  0b11111,
  0b00000,
  0b00000
};//mesa 3
void setup() {
  servomotor.attach(A3);
  flag = 1;
  flag2 = 1;
  flag3 = 1;
  flag5 = 0;
  g = 500;
  i = 0;
  pinMode(u, OUTPUT);
  pinMode(d, OUTPUT);
  pinMode(t, OUTPUT);
  pinMode(q, OUTPUT);
  pinMode(c, OUTPUT);
  pinMode(s, OUTPUT);
  pinMode(se, OUTPUT);
  pinMode(b_esq, INPUT);
  pinMode(b_dir, INPUT);
  Serial.begin(9600);
  lcd.clear();
  lcd.createChar(1, customChar1);//olho1
  lcd.createChar(3, customChar3);//selec
  lcd.createChar(4, customChar4);//braco
  lcd.createChar(5, customChar5);//olho
  lcd.createChar(6, customChar6);//boca
  lcd.createChar(7, customChar7);//vento
  lcd.createChar(8, customChar8);//mesa 1
  lcd.createChar(9, customChar9);//mesa 2
  lcd.createChar(10, customChar10);//mesa 3
  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
}
void tela_selecao2();
void reset() {
  digitalWrite(u, 0);
  digitalWrite(d, 0);
  digitalWrite(t, 0);
  digitalWrite(q, 0);
  digitalWrite(c, 0);
  digitalWrite(s, 0);
  digitalWrite(se, 0);
}
void seq() {
  digitalWrite(u, 1);
  delay(300);
  digitalWrite(d, 1);
  delay(300);
  digitalWrite(t, 1);
  delay(300);
  digitalWrite(q, 1);
  delay(300);
  digitalWrite(c, 1);
  delay(300);
  digitalWrite(s, 1);
  delay(300);
  digitalWrite(se, 1);
  delay(300);
}
int ler_b() {
  if ((digitalRead(b_esq) == 1) && (digitalRead(b_dir) == 0)) {
    return (1);
  } else if ((digitalRead(b_esq) == 0) && (digitalRead(b_dir) == 0)) {
    delay(200);
    return (ler_b());
  } else
    return 0;
}
int ler_botao() {
  int u = 2;
  int d = 2;
  int c = 2;
  int m = 2;
  u = ler_b();
  if ((u == 1) || (u == 0)) {
    delay(500);
    d = ler_b();
    if ((d == 1) || (d == 0)) {
      delay(500);
      c = ler_b();
      if ((c == 1) || (c == 0)) {
        delay(500);
        m = ler_b();
        delay(500);
      }
    }
  }
  return ((1000 * u) + (100 * d) + (10 * c) + m);
}
void zero() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 0);

}
void um() {
  digitalWrite(u, 0);
  digitalWrite(d, 0);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 0);
  digitalWrite(s, 0);
  digitalWrite(se, 0);

}
void dois() {
  digitalWrite(u, 0);
  digitalWrite(d, 1);
  digitalWrite(t, 1);
  digitalWrite(q, 0);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void tres() {
  digitalWrite(u, 0);
  digitalWrite(d, 1);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 1);
  digitalWrite(s, 0);
  digitalWrite(se, 1);

}
void quatro() {
  digitalWrite(u, 1);
  digitalWrite(d, 0);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 0);
  digitalWrite(s, 0);
  digitalWrite(se, 1);

}
void cinco() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 0);
  digitalWrite(q, 1);
  digitalWrite(c, 1);
  digitalWrite(s, 0);
  digitalWrite(se, 1);

}
void seis() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 0);
  digitalWrite(q, 1);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void sete() {
  digitalWrite(u, 0);
  digitalWrite(d, 1);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 0);
  digitalWrite(s, 0);
  digitalWrite(se, 0);

}
void oito() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void nove() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 0);
  digitalWrite(s, 0);
  digitalWrite(se, 1);

}
void a_() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 0);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void b_() {
  digitalWrite(u, 1);
  digitalWrite(d, 0);
  digitalWrite(t, 0);
  digitalWrite(q, 1);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void c_() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 0);
  digitalWrite(q, 0);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 0);

}
void d_() {
  digitalWrite(u, 0);
  digitalWrite(d, 0);
  digitalWrite(t, 1);
  digitalWrite(q, 1);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void e_() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 0);
  digitalWrite(q, 0);
  digitalWrite(c, 1);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void f_() {
  digitalWrite(u, 1);
  digitalWrite(d, 1);
  digitalWrite(t, 0);
  digitalWrite(q, 0);
  digitalWrite(c, 0);
  digitalWrite(s, 1);
  digitalWrite(se, 1);

}
void tela_selecao1();
void acender(int k) {
  switch (k) {
    case 0:
      zero();
      delay(1000);
      break;
    case 1:
      um();
      delay(1000);
      break;
    case 10:
      dois();
      delay(1000);
      break;
    case 11:
      tres();
      delay(1000);
      break;
    case 100:
      quatro();
      delay(1000);
      break;
    case 101:
      cinco();
      delay(1000);
      break;
    case 110:
      seis();
      delay(1000);
      break;
    case 111:
      sete();
      delay(1000);
      break;
    case 1000:
      oito();
      delay(1000);
      break;
    case 1001:
      nove();
      delay(1000);
      break;
    case 1010:
      a_();
      delay(1000);
      break;
    case 1011:
      b_();
      delay(1000);
      break;
    case 1100:
      c_();
      delay(1000);
      break;
    case 1101:
      d_();
      delay(1000);
      break;
    case 1110:
      e_();
      delay(1000);
      break;
    case 1111:
      f_();
      delay(1000);
      break;
    default:
      Serial.println("Deu zebra");
      delay(1000);
      break;
  }
}
void mesa_loca() {
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  lcd.write(byte(7));
  lcd.write(byte(8));
  lcd.write(byte(9));
  lcd.write(byte(10));
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(7));
  lcd.write(byte(8));
  lcd.write(byte(9));
  lcd.write(byte(9));
  lcd.write(byte(10));
  delay(g);
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  lcd.print("  ");
  lcd.write(byte(7));
  lcd.write(byte(8));
  lcd.write(byte(9));
  lcd.write(byte(9));
  lcd.write(byte(10));
  delay(g);
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  lcd.print("   ");
  lcd.write(byte(7));
  lcd.write(byte(8));
  lcd.write(byte(9));
  lcd.write(byte(9));
  delay(g);
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  lcd.print("    ");
  lcd.write(byte(7));
  lcd.write(byte(8));
  lcd.write(byte(9));
  delay(g);
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  lcd.print("     ");
  lcd.write(byte(7));
  lcd.write(byte(8));
  delay(g);
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  lcd.print("      ");
  lcd.write(byte(7));
  delay(g);
  lcd.clear();
  lcd.print("(");
  lcd.write(byte(4));
  lcd.print(" ");
  lcd.write(byte(5));
  lcd.write(byte(6));
  lcd.write(byte(5));
  lcd.print(" )");
  lcd.write(byte(4));
  delay(g);
}
void wasted() {
  lcd.clear();
  mesa_loca();
  flag3 = 0;
  flag = 0;
  delay(g);
}
void entrar_senha() {
  lcd.clear();
  lcd.print("lendo senha");
  for (i = 0; i < 5; i++) {
    x[i] = ler_botao();
    acender(x[i]);
    delay(1000);
    reset();
  }
}
void criar_senha() {
  lcd.clear();
  lcd.print("criando senha");
  for (i = 0; i < 5; i++) {
    y[i] = ler_botao();
    acender(y[i]);
    delay(500);
    reset();
  }
  lcd.clear();
  lcd.print("senha criada:");
  for (i = 0; i < 5; i++) {
    acender(y[i]);
    reset();
    delay(500);
  }
  delay(g);
  lcd.clear();
  flag2 = 0;
  tela_selecao1();
}
int verificar_senha() {
  for (i = 0; i < 5; i++)
    if ((x[i]) == (y[i])) {
      return 1;
    } else return (0);
}
void travar() {
servomotor.write(0);
  while (true) {
    lcd.clear();
    lcd.print("################");
    delay(4 * g);
    
  }
}
void resetar_2() {
  int o = 0;
  while (o < 3) {
    lcd.clear();
    lcd.print("entre a senha");
    entrar_senha();
    flag4 = verificar_senha();
    if (flag4 == 0) {
      o++;
      delay(g);
      lcd.clear();
      lcd.print("tens mais");
      delay(2 * g);
      lcd.clear();
      if (o == 1) {
        lcd.print("2 chances");
        delay(2 * g);
      } else if (o == 2) {
        lcd.print("1 chance");
        delay(2 * g);
      }

    } else {
      flag = 1;
      flag2 = 1;
      flag3 = 1;
      for (int i = 0; i < 5; i++) {
        x[i] = 0;
        y[i] = 0;

      }
      loop();
    }
  } wasted();
  travar();

}
void atualizar_senha() {
  int o = 0;
  while (o < 3) {
    lcd.clear();
    lcd.print("confirme a senha");
    entrar_senha();
    flag4 = verificar_senha();
    if (!flag4) {
      o++;
      delay(g);
      lcd.clear();
      lcd.print("tens mais");
      delay(2 * g);
      lcd.clear();
      if (o == 1) {
        lcd.print("2 chances");
        delay(2 * g);
      } else if (o == 2) {
        lcd.print("1 chance");
        delay(2 * g);
      }

    } else
      criar_senha();
  }
  wasted();
  travar();

}
void verificar_senha_controle() {
  int fy;
  int hj = 0;
  while (hj < 3) {
    entrar_senha();
    fy = verificar_senha();
    if (fy == 0) {
      hj++;
      delay(g);
      lcd.clear();
      lcd.print("tens mais");
      delay(2 * g);
      lcd.clear();
      if (hj == 1) {
        lcd.print("2 chances");
        delay(2 * g);
      } else if (hj == 2) {
        lcd.print("1 chance");
        delay(2 * g);
      }
    } else {
      lcd.clear();
      lcd.print("acesso liberado");
      delay(2 * g);
      tela_controle();
    }
  } wasted();
  travar();
}
void tela_seguranca6() {
  k = 2;
  lcd.clear();
  lcd.print("voltar");
  lcd.print("o");
  lcd.print("att");
  lcd.print("o");
  lcd.print("rst");
  lcd.write(byte(3));
  k = ler_b();
  delay(g);
  if (k == 0) {
    resetar_2();
  } else {
    tela_seguranca3();

  }
}
void tela_seguranca4() {
  k = 2;
  lcd.clear();
  lcd.print("voltar");
  lcd.print("o");
  lcd.print("att");
  lcd.write(byte(3));
  lcd.print("rst");
  lcd.print("o");
  k = ler_b();
  delay(g);
  if (k == 0) {
    atualizar_senha();
    tela_selecao1();
  } else {
    tela_seguranca6();

  }
}
void tela_seguranca3() {
  k = 2;
  lcd.clear();
  lcd.print("voltar");
  lcd.write(byte(3));
  lcd.print("att");
  lcd.print("o");
  lcd.print("rst");
  lcd.print("o");
  k = ler_b();
  delay(g);
  if (k == 0) {
    tela_selecao1();
  } else {
    tela_seguranca4();

  }
}
void resetar_() {
  flag = 1;
  flag2 = 1;
  flag3 = 1;
  for (int i = 0; i < 5; i++) {
    x[i] = 0;
    y[i] = 0;
  }
}
void tela_seguranca5() {
  k = 2;
  lcd.clear();
  lcd.print("    1");
  lcd.print("o");
  lcd.print("   2");
  lcd.print("o");
  lcd.print("   3");
  lcd.write(byte(3));
  k = ler_b();
  delay(g);
  if (k == 0) {
    resetar_();
    interface_inicial(1);
  } else {
    tela_seguranca();
  }
}
void tela_seguranca2() {
  k = 2;
  lcd.clear();
  lcd.print("    1");
  lcd.print("o");
  lcd.print("   2");
  lcd.write(byte(3));
  lcd.print("   3");
  lcd.print("o");
  k = ler_b();
  delay(g);
  if (k == 0) {
    criar_senha();
    tela_selecao1();
  } else {
    tela_seguranca5();
  }
}
void tela_seguranca() {
  k = 2;
  lcd.clear();
  lcd.print("    1");
  lcd.write(byte(3));
  lcd.print("   2");
  lcd.print("o");
  lcd.print("   3");
  lcd.print("o");
  k = ler_b();
  delay(g);
  if (k == 0) {
    tela_selecao1();
  } else {
    tela_seguranca2();
  }
}
int interface_inicial(int flag) {
  lcd.clear();
  lcd.print("Boas vindas.");
  delay(1500);
  lcd.clear();
  lcd.print("1 p/ navegacao");
  delay(3 * g);
  lcd.clear();
  lcd.print("0 p/ selecao");
  delay(3 * g);
  lcd.clear();
  lcd.print("seg =seguranca");
  delay(3 * g);
  lcd.clear();
  lcd.print("con=controle");
  delay(3 * g);
  lcd.clear();
  lcd.print("pressione 0 para");
  delay(3 * g);
  lcd.clear();
  lcd.print("sair");
  flag = ler_b();
  delay(500);
  return (flag);
}
int deslizando() {
  int flag_des = 0;
  while (!flag_des) {
    if (((digitalRead(b_esq)) == 0) && ((digitalRead(b_dir)) == 0)) {
      idle = idle + 200;
      if (idle >= (5000)) {
        flag_des = 1;
      } else {
        delay(200);
        deslizando();
      }
    } else {
      if ((digitalRead(b_esq) == 0) && (digitalRead(b_dir) == 1)) {
        if (pos_servo <= 180) {
          pos_servo++;
          servomotor.write(pos_servo);
          delay(15);
          idle = 0;
        }
      } else if (pos_servo >= 0) {
        pos_servo--;
        servomotor.write(pos_servo);
        delay(15);
        idle = 0;
      }
    }
  }
  tela_selecao2();
}
void controle_deslizante() {
  lcd.clear();
  lcd.print("apos 5 segundos");
  delay(2 * g);
  lcd.clear();
  lcd.print("de inatividade");
  delay(2 * g);
  lcd.clear();
  lcd.print("voltaras a tela");
  delay(2 * g);
  lcd.clear();
  lcd.print("anterior");
  delay(2 * g);
  while (!flag5) {
    flag5 = deslizando();
  }
}
void tela_controle() {
  lcd.clear();
  lcd.print("0 p anti horario");
  delay(2 * g);
  lcd.clear();
  lcd.print("1 p/ horario");
  delay(2 * g);
  lcd.clear();
  controle_deslizante();
}
void tela_selecao2() {
  k = 2;
  lcd.clear();
  lcd.print("  seg");
  lcd.print("o");
  lcd.print("    con");
  lcd.write(byte(3));
  lcd.print("  ");
  k = ler_b();
  delay(g);
  if (k == 0) {
    if (!flag2) {
      lcd.clear();
      lcd.print("confirme a senha");
      delay(g);
      verificar_senha_controle();
      tela_controle();
    } else
      lcd.clear();
    lcd.print("cadastre uma senha");
    delay(g);
    tela_selecao2();
  } else
    tela_selecao1();
}
void tela_selecao1() {
  k = 2;
  lcd.clear();
  lcd.print("  seg");
  lcd.write(byte(3));
  lcd.print("    con");
  lcd.print("o");
  k = ler_b();
  delay(g);
  if (k == 0) {
    if (flag2) {
      lcd.clear();
      lcd.print("1-voltar 2-criar");
      delay(2*g);
      lcd.clear();
      lcd.print("3-resetar");
      delay(2*g);
      tela_seguranca();
    } else tela_seguranca3();
  }
  else
    tela_selecao2();
}

void loop() {
  while (flag) {
    flag = interface_inicial(flag);
  }
  tela_selecao1();
}
